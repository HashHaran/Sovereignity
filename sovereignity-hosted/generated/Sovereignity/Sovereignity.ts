// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ContentCreation extends ethereum.Event {
  get params(): ContentCreation__Params {
    return new ContentCreation__Params(this);
  }
}

export class ContentCreation__Params {
  _event: ContentCreation;

  constructor(event: ContentCreation) {
    this._event = event;
  }

  get contentId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get contentIdString(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ContentDeletion extends ethereum.Event {
  get params(): ContentDeletion__Params {
    return new ContentDeletion__Params(this);
  }
}

export class ContentDeletion__Params {
  _event: ContentDeletion;

  constructor(event: ContentDeletion) {
    this._event = event;
  }

  get contentId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get contentIdString(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OwnershipTransfered extends ethereum.Event {
  get params(): OwnershipTransfered__Params {
    return new OwnershipTransfered__Params(this);
  }
}

export class OwnershipTransfered__Params {
  _event: OwnershipTransfered;

  constructor(event: OwnershipTransfered) {
    this._event = event;
  }

  get contentId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get contentIdString(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PermissionGranted extends ethereum.Event {
  get params(): PermissionGranted__Params {
    return new PermissionGranted__Params(this);
  }
}

export class PermissionGranted__Params {
  _event: PermissionGranted;

  constructor(event: PermissionGranted) {
    this._event = event;
  }

  get contentId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get contentIdString(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get user(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PermissionRevoked extends ethereum.Event {
  get params(): PermissionRevoked__Params {
    return new PermissionRevoked__Params(this);
  }
}

export class PermissionRevoked__Params {
  _event: PermissionRevoked;

  constructor(event: PermissionRevoked) {
    this._event = event;
  }

  get contentId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get contentIdString(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get user(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get timeStamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Sovereignity extends ethereum.SmartContract {
  static bind(address: Address): Sovereignity {
    return new Sovereignity("Sovereignity", address);
  }

  isPermitted(contentId: string, user: Address): boolean {
    let result = super.call(
      "isPermitted",
      "isPermitted(string,address):(bool)",
      [ethereum.Value.fromString(contentId), ethereum.Value.fromAddress(user)]
    );

    return result[0].toBoolean();
  }

  try_isPermitted(
    contentId: string,
    user: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPermitted",
      "isPermitted(string,address):(bool)",
      [ethereum.Value.fromString(contentId), ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ownerOf(contentId: string): Address {
    let result = super.call("ownerOf", "ownerOf(string):(address)", [
      ethereum.Value.fromString(contentId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(contentId: string): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(string):(address)", [
      ethereum.Value.fromString(contentId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddContentCall extends ethereum.Call {
  get inputs(): AddContentCall__Inputs {
    return new AddContentCall__Inputs(this);
  }

  get outputs(): AddContentCall__Outputs {
    return new AddContentCall__Outputs(this);
  }
}

export class AddContentCall__Inputs {
  _call: AddContentCall;

  constructor(call: AddContentCall) {
    this._call = call;
  }

  get contentId(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddContentCall__Outputs {
  _call: AddContentCall;

  constructor(call: AddContentCall) {
    this._call = call;
  }
}

export class AwardPermissionCall extends ethereum.Call {
  get inputs(): AwardPermissionCall__Inputs {
    return new AwardPermissionCall__Inputs(this);
  }

  get outputs(): AwardPermissionCall__Outputs {
    return new AwardPermissionCall__Outputs(this);
  }
}

export class AwardPermissionCall__Inputs {
  _call: AwardPermissionCall;

  constructor(call: AwardPermissionCall) {
    this._call = call;
  }

  get contentId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AwardPermissionCall__Outputs {
  _call: AwardPermissionCall;

  constructor(call: AwardPermissionCall) {
    this._call = call;
  }
}

export class DeleteContentCall extends ethereum.Call {
  get inputs(): DeleteContentCall__Inputs {
    return new DeleteContentCall__Inputs(this);
  }

  get outputs(): DeleteContentCall__Outputs {
    return new DeleteContentCall__Outputs(this);
  }
}

export class DeleteContentCall__Inputs {
  _call: DeleteContentCall;

  constructor(call: DeleteContentCall) {
    this._call = call;
  }

  get contentId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get permUsers(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class DeleteContentCall__Outputs {
  _call: DeleteContentCall;

  constructor(call: DeleteContentCall) {
    this._call = call;
  }
}

export class RevokePermissionCall extends ethereum.Call {
  get inputs(): RevokePermissionCall__Inputs {
    return new RevokePermissionCall__Inputs(this);
  }

  get outputs(): RevokePermissionCall__Outputs {
    return new RevokePermissionCall__Outputs(this);
  }
}

export class RevokePermissionCall__Inputs {
  _call: RevokePermissionCall;

  constructor(call: RevokePermissionCall) {
    this._call = call;
  }

  get contentId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokePermissionCall__Outputs {
  _call: RevokePermissionCall;

  constructor(call: RevokePermissionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get contentId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get permUsers(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
